{"ast":null,"code":"var _jsxFileName = \"/Users/seandegroot/Desktop/react-learning/src/tutorial/2-useEffect/setup/Users.js\";\nimport User from \"./User\"; // users, is a prop from the users state set in app.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = _ref => {\n  let {\n    users\n  } = _ref;\n  return users.map(user => {\n    // instead of this, I can use spread!\n    // return (\n    //   <User\n    //     key={user.id}\n    //     login={user.login}\n    //     avatar_url={user.avatar_url}\n    //     html_url={user.html_url}\n    //   />\n    // );\n    return /*#__PURE__*/_jsxDEV(User, { ...user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  });\n};\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["User","Users","users","map","user","id"],"sources":["/Users/seandegroot/Desktop/react-learning/src/tutorial/2-useEffect/setup/Users.js"],"sourcesContent":["import User from \"./User\";\n\n// users, is a prop from the users state set in app.js\nconst Users = ({ users }) => {\n  return users.map((user) => {\n    // instead of this, I can use spread!\n    // return (\n    //   <User\n    //     key={user.id}\n    //     login={user.login}\n    //     avatar_url={user.avatar_url}\n    //     html_url={user.html_url}\n    //   />\n    // );\n    return <User key={user.id} {...user} />;\n  });\n};\n\nexport default Users;\n"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC3B,OAAOA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,oBAAO,QAAC,IAAD,OAAwBA;IAAxB,GAAWA,IAAI,CAACC,EAAhB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAXM,CAAP;AAYD,CAbD;;KAAMJ,K;AAeN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}